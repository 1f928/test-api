name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.set-name.outputs.name }}
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - id: set-name
        run: >
          echo "::set-output name=name::$(cat package.json | sed -En 's/.*"name": "(.*)".*/\1/p')"

      - id: set-version
        run: >
          echo "::set-output name=version::$(cat package.json | sed -En 's/.*"version": "([0-9.]*)".*/\1/p')"

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: echo ${{ needs.setup.outputs.name }} ${{ needs.setup.outputs.version }}
      - run: npm ci
      - run: npm test
  
  push_image:
    name: Push Docker image to Docker Hub
    needs: [setup, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ needs.setup.outputs.name }}:${{ needs.setup.outputs.version }}

  